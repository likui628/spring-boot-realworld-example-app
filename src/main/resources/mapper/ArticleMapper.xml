<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.realworld.mapper.ArticleMapper">

    <insert id="insert">
        insert into articles(id, slug, title, description, body, user_id, created_at, updated_at)
        values (#{article.id},
                #{article.slug},
                #{article.title},
                #{article.description},
                #{article.body},
                #{article.userId},
                #{article.createdAt},
                #{article.updatedAt})
    </insert>

    <insert id="insertTag">
        insert into tags(id, name)
        values (#{tag.id},
                #{tag.name})
    </insert>

    <insert id="insertArticleTagRelation">
        insert into article_tags(article_id, tag_id)
        values (#{articleId}, #{tagId})
    </insert>

    <select id="findTag" resultType="com.example.realworld.domain.entity.TagEntity">
        select id, name
        from tags
        where name = #{name}
    </select>
    <sql id="selectArticle">
        select A.id          articleId,
               A.slug        articleSlug,
               A.title       articleTitle,
               A.description articleDescription,
               A.body        articleBody,
               A.user_id     articleUserId,
               A.created_at  articleCreatedAt,
               A.updated_at  articleUpdatedAt,
               T.id          tagId,
               T.name        tagName
        from articles A
                 left join article_tags AT on A.id = AT.article_id
                 left join tags T on T.id = AT.tag_id
    </sql>
    <select id="findBySlug" resultMap="transfer.data.articleDto">
        <include refid="selectArticle"/>
        where slug = #{slug}
    </select>
</mapper>